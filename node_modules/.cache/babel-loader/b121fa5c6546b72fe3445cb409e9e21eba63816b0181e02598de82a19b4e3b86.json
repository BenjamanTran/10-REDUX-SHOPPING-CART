{"ast":null,"code":"import { cartActions } from \"./cart-slide\";\nimport { uiActions } from \"./ui-slice\";\nexport const fetDataCart = () => {\n  return async dispatch => {\n    const fetData = async () => {\n      const response = await fetch('https://fir-react-app-886c3-default-rtdb.firebaseio.com/cart.json');\n      if (!response.ok) {\n        throw new Error('Get data failed');\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetData();\n      dispatch(cartActions.replaceCart({\n        items: cartData.items || [],\n        totalQuantity: cartData.totalQuantity || 0\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error',\n        message: 'Error fetch data in firebase'\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'sending',\n      title: 'Sending',\n      message: 'Sending data to firebaseio'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://fir-react-app-886c3-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify({\n          items: cart.items,\n          totalQuantity: cart.totalQuantity\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Sending data to firebaseio failed');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success',\n        message: 'Success sending cart data'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error',\n        message: 'Error sending cart data'\n      }));\n    }\n  };\n};","map":{"version":3,"names":["cartActions","uiActions","fetDataCart","dispatch","fetData","response","fetch","ok","Error","data","json","cartData","replaceCart","items","totalQuantity","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify"],"sources":["/home/tantt/LEARNING/REACT/10-redux-project/src/store/cart-actions.js"],"sourcesContent":["import { cartActions } from \"./cart-slide\"\nimport { uiActions } from \"./ui-slice\"\n\nexport const fetDataCart = () => {\n  return async (dispatch) => {\n    const fetData = async () => {\n      const response = await fetch('https://fir-react-app-886c3-default-rtdb.firebaseio.com/cart.json')\n      if (!response.ok) {\n        throw new Error('Get data failed')\n      }\n\n      const data = await response.json()\n      return data\n    }\n\n    try {\n      const cartData = await fetData();\n      dispatch(\n        cartActions.replaceCart({\n          items: cartData.items || [],\n          totalQuantity: cartData.totalQuantity || 0\n        })\n      )\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: 'error',\n          title: 'Error',\n          message: 'Error fetch data in firebase'\n        })\n      )\n    }\n  }\n}\n\nexport const sendCartData = (cart) => {\n  return async (dispatch) => {\n    dispatch(uiActions.showNotification({\n      status: 'sending',\n      title: 'Sending',\n      message: 'Sending data to firebaseio'\n    }))\n\n    const sendRequest = async () => {\n      const response = await fetch('https://fir-react-app-886c3-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify({\n          items: cart.items,\n          totalQuantity: cart.totalQuantity\n        })\n      })\n      if (!response.ok) {\n        throw new Error('Sending data to firebaseio failed')\n      }\n    }\n    try {\n      await sendRequest()\n      dispatch(\n        uiActions.showNotification({\n          status: 'success',\n          title: 'Success',\n          message: 'Success sending cart data'\n        })\n      )\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: 'error',\n          title: 'Error',\n          message: 'Error sending cart data'\n        }))\n    }\n\n\n  }\n}\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,cAAc;AAC1C,SAASC,SAAS,QAAQ,YAAY;AAEtC,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAC/B,OAAO,MAAOC,QAAQ,IAAK;IACzB,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mEAAmE,CAAC;MACjG,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACb,CAAC;IAED,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMP,OAAO,CAAC,CAAC;MAChCD,QAAQ,CACNH,WAAW,CAACY,WAAW,CAAC;QACtBC,KAAK,EAAEF,QAAQ,CAACE,KAAK,IAAI,EAAE;QAC3BC,aAAa,EAAEH,QAAQ,CAACG,aAAa,IAAI;MAC3C,CAAC,CACH,CAAC;IACH,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdZ,QAAQ,CACNF,SAAS,CAACe,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,OAAO;QACdC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EACpC,OAAO,MAAOlB,QAAQ,IAAK;IACzBA,QAAQ,CAACF,SAAS,CAACe,gBAAgB,CAAC;MAClCC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,SAAS;MAChBC,OAAO,EAAE;IACX,CAAC,CAAC,CAAC;IAEH,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,mEAAmE,EAAE;QAChGiB,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBb,KAAK,EAAEQ,IAAI,CAACR,KAAK;UACjBC,aAAa,EAAEO,IAAI,CAACP;QACtB,CAAC;MACH,CAAC,CAAC;MACF,IAAI,CAACT,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,mCAAmC,CAAC;MACtD;IACF,CAAC;IACD,IAAI;MACF,MAAMc,WAAW,CAAC,CAAC;MACnBnB,QAAQ,CACNF,SAAS,CAACe,gBAAgB,CAAC;QACzBC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,SAAS;QAChBC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdZ,QAAQ,CACNF,SAAS,CAACe,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,OAAO;QACdC,OAAO,EAAE;MACX,CAAC,CAAC,CAAC;IACP;EAGF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}